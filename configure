#! /bin/sh

# local options:  ac_help is the help message that describes them
# and LOCAL_AC_OPTIONS is the script that interprets them.  LOCAL_AC_OPTIONS
# is a script that's processed with eval, so you need to be very careful to
# make certain that what you quote is what you want to quote.

# load in the configuration file
#
ac_help='--disable-vi	Disable vi line editing
--disable-emacs	Disable emacs line editing'

LOCAL_AC_OPTIONS='
set=`locals $*`;
if [ "$set" ]; then
    eval $set
    shift 1
else
    ac_error=T;
fi'

locals() {
    K=`echo $1 | $AC_UPPERCASE`
    case "$K" in
    --DISABLE-*)disable=`echo $K | sed -e 's/--DSIABLE-//' | tr '-' '_'`
		echo NO_{enable}=T ;;
    esac
}

VERSION=`grep -i VERSION: IAFA-PACKAGE | awk '{print $2}'`
TARGET=pdksh
. ./configure.inc

AC_INIT $TARGET

AC_C_CONST
AC_CHECK_TYPE pid_t sys/types.h || AC_DEFINE 'pid_t' 'int'
AC_CHECK_TYPE gid_t sys/types.h || AC_DEFINE 'gid_t' 'int'
AC_CHECK_TYPE uid_t sys/types.h || AC_DEFINE 'uid_t' 'int'
AC_CHECK_TYPE mode_t sys/types.h || AC_DEFINE 'mode_t' 'int'
AC_CHECK_TYPE off_t sys/types.h || AC_DEFINE 'off_t' 'long'

if AC_CHECK_FUNCS sigaction; then
    AC_DEFINE 'POSIX_SIGNALS' '1'
elif AC_CHECK_FUNCS sigset; then
    AC_DEFINE 'BSD41_SIGNALS' '1'
elif AC_CHECK_FUNCS signal; then
    # also need to check for reset-upon-receipt behavior
    AC_DEFINE 'V7_SIGNALS' '1'
else
    AC_DEFINE 'USA_FAKE_SIGACT' '1'
fi

AC_CHECK_HEADERS sys/wait.h unistd.h

AC_CHECK_FUNCS 'mmap(0, 0, 0, 0, 0, 0)' sys/mman.h

AC_CHECK_FIELD stat st_rdev sys/types.h sys/stat.h unistd.h

AC_OUTPUT Makefile
